{
    "/home/zhang/Packages/torch/torch1.12.0/utils/model_dump/__init__.py": [
        {
            "torch.utils.model_dump.__init__.get_info_and_burn_skeleton": 362,
            "get_model_info": [
                363,
                "[179]"
            ]
        }
    ],
    "/home/zhang/Packages/torch/torch1.12.0/utils/tensorboard/_caffe2_graph.py": [
        {
            "torch.utils.tensorboard._caffe2_graph.protos_to_graph_def": 771,
            "_operators_to_graph_def": [
                789,
                "[605]"
            ]
        }
    ],
    "/home/zhang/Packages/torch/torch1.12.0/fx/experimental/unification/multipledispatch/dispatcher.py": [
        {
            "torch.fx.experimental.unification.multipledispatch.dispatcher.Dispatcher.register": 114,
            "add": [
                135,
                "[165]"
            ]
        }
    ],
    "/home/zhang/Packages/torch/torch1.12.0/_prims/__init__.py": [
        {
            "torch._prims.__init__._make_elementwise_unary_prim": 244,
            "_make_prim": [
                251,
                "[155]"
            ]
        },
        {
            "torch._prims.__init__._make_elementwise_binary_prim": 259,
            "_make_prim": [
                266,
                "[155]"
            ]
        }
    ],
    "/home/zhang/Packages/torch/torch1.12.0/testing/_internal/common_utils.py": [
        {
            "torch.testing._internal.common_utils.TestCase.compare_with_reference": 1867,
            "assertEqual": [
                1875,
                "[1911]"
            ]
        },
        {
            "torch.testing._internal.common_utils.TestCase.compare_with_numpy": 1877,
            "assertEqual": [
                1906,
                "[1911]"
            ]
        },
        {
            "torch.testing._internal.common_utils.TestCase.assertEqualIgnoreType": 1908,
            "assertEqual": [
                1909,
                "[1911]"
            ]
        },
        {
            "torch.testing._internal.common_utils.TestCase.assertNotEqual": 1977,
            "assertEqual": [
                1980,
                "[1911]"
            ]
        }
    ],
    "/home/zhang/Packages/torch/torch1.12.0/testing/_internal/common_methods_invocations.py": [
        {
            "torch.testing._internal.common_methods_invocations._reference_inputs_elementwise_unary": 2128,
            "generate_elementwise_unary_small_value_tensors": [
                2136,
                "[2050]"
            ]
        },
        {
            "torch.testing._internal.common_methods_invocations._reference_inputs_elementwise_unary": 2128,
            "generate_elementwise_unary_large_value_tensors": [
                2143,
                "[2060]"
            ]
        },
        {
            "torch.testing._internal.common_methods_invocations._reference_inputs_elementwise_unary": 2128,
            "generate_elementwise_unary_extremal_value_tensors": [
                2147,
                "[2070]"
            ]
        },
        {
            "torch.testing._internal.common_methods_invocations.reference_inputs_elementwise_unary": 2151,
            "generate_elementwise_unary_noncontiguous_tensors": [
                2161,
                "[2081]"
            ]
        },
        {
            "torch.testing._internal.common_methods_invocations.reference_inputs_elementwise_unary": 2151,
            "generate_elementwise_unary_arbitrarily_strided_tensors": [
                2165,
                "[2111]"
            ]
        },
        {
            "torch.testing._internal.common_methods_invocations.sample_inputs_argsort": 3795,
            "sample_inputs_sort": [
                3796,
                "[3748]"
            ]
        },
        {
            "torch.testing._internal.common_methods_invocations.sample_inputs_unique_consecutive": 3824,
            "sample_inputs_unique": [
                3825,
                "[3798]"
            ]
        },
        {
            "torch.testing._internal.common_methods_invocations.sample_inputs_reduction_count_nonzero": 4478,
            "sample_inputs_reduction": [
                4480,
                "[679]"
            ]
        }
    ],
    "/home/zhang/Packages/torch/torch1.12.0/onnx/symbolic_opset9.py": [
        {
            "torch.onnx.symbolic_opset9.div": 75,
            "_div_rounding_mode": [
                79,
                "[89]"
            ]
        },
        {
            "torch.onnx.symbolic_opset9.lstm": 3249,
            "_lstm_packed": [
                3251,
                "[3219]"
            ]
        },
        {
            "torch.onnx.symbolic_opset9.lstm": 3249,
            "_lstm_full": [
                3253,
                "[3188]"
            ]
        },
        {
            "torch.onnx.symbolic_opset9.var_mean": 3722,
            "_var_mean": [
                3726,
                "[3680]"
            ]
        }
    ],
    "/home/zhang/Packages/torch/torch1.12.0/onnx/symbolic_opset10.py": [
        {
            "torch.onnx.symbolic_opset10.div": 16,
            "_div_rounding_mode": [
                20,
                "[24]"
            ]
        }
    ],
    "/home/zhang/Packages/torch/torch1.12.0/distributed/fsdp/fully_sharded_data_parallel.py": [
        {
            "torch.distributed.fsdp.fully_sharded_data_parallel.FullyShardedDataParallel.forward": 1993,
            "module": [
                2016,
                "[976]"
            ]
        }
    ],
    "/home/zhang/Packages/torch/torch1.12.0/distributed/fsdp/flatten_params_wrapper.py": [
        {
            "torch.distributed.fsdp.flatten_params_wrapper.FlattenParamsWrapper.forward": 420,
            "module": [
                422,
                "[287]"
            ]
        }
    ],
    "/home/zhang/Packages/torch/torch1.12.0/distributed/pipeline/sync/pipe.py": [
        {
            "torch.distributed.pipeline.sync.pipe.PipeSequential.forward": 119,
            "module": [
                122,
                "[162]"
            ]
        }
    ]
}