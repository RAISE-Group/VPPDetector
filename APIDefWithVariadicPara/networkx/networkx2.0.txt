{
    "/home/zhang/Packages/networkx/networkx2.0/exception.py": [
        {
            "networkx.exception.PowerIterationFailedConvergence.__init__": 102
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/generators/classic.py": [
        {
            "networkx.generators.classic.complete_multipartite_graph": 629
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/utils/union_find.py": [
        {
            "networkx.utils.union_find.UnionFind.union": 98
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/utils/decorators.py": [
        {
            "networkx.utils.decorators.not_implemented_for": 17
        },
        {
            "networkx.utils.decorators._not_implemented_for": 53
        },
        {
            "networkx.utils.decorators._open_file": 160
        },
        {
            "networkx.utils.decorators._nodes_or_number": 268
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/utils/tests/test_decorators.py": [
        {
            "networkx.utils.tests.test_decorators.TestOpenFileDecorator.writer_arg4default": 65
        },
        {
            "networkx.utils.tests.test_decorators.TestOpenFileDecorator.writer_kwarg": 73
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/utils/tests/test_heaps.py": [
        {
            "networkx.utils.tests.test_heaps._test_heap_class": 90
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/drawing/nx_pydot.py": [
        {
            "networkx.drawing.nx_pydot.graphviz_layout": 245
        },
        {
            "networkx.drawing.nx_pydot.pydot_layout": 267
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/drawing/nx_pylab.py": [
        {
            "networkx.drawing.nx_pylab.draw": 44
        },
        {
            "networkx.drawing.nx_pylab.draw_networkx": 134
        },
        {
            "networkx.drawing.nx_pylab.draw_networkx_nodes": 275
        },
        {
            "networkx.drawing.nx_pylab.draw_networkx_edges": 406
        },
        {
            "networkx.drawing.nx_pylab.draw_networkx_labels": 638
        },
        {
            "networkx.drawing.nx_pylab.draw_networkx_edge_labels": 743
        },
        {
            "networkx.drawing.nx_pylab.draw_circular": 888
        },
        {
            "networkx.drawing.nx_pylab.draw_kamada_kawai": 904
        },
        {
            "networkx.drawing.nx_pylab.draw_random": 920
        },
        {
            "networkx.drawing.nx_pylab.draw_spectral": 936
        },
        {
            "networkx.drawing.nx_pylab.draw_spring": 952
        },
        {
            "networkx.drawing.nx_pylab.draw_shell": 968
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/classes/multidigraph.py": [
        {
            "networkx.classes.multidigraph.MultiDiGraph.__init__": 247
        },
        {
            "networkx.classes.multidigraph.MultiDiGraph.add_edge": 335
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/classes/coreviews.py": [
        {
            "networkx.classes.coreviews.ReadOnlyGraph.not_allowed": 265
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/classes/multigraph.py": [
        {
            "networkx.classes.multigraph.MultiGraph.__init__": 245
        },
        {
            "networkx.classes.multigraph.MultiGraph.add_edge": 329
        },
        {
            "networkx.classes.multigraph.MultiGraph.add_edges_from": 419
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/classes/digraph.py": [
        {
            "networkx.classes.digraph.DiGraph.__init__": 263
        },
        {
            "networkx.classes.digraph.DiGraph.add_node": 373
        },
        {
            "networkx.classes.digraph.DiGraph.add_nodes_from": 419
        },
        {
            "networkx.classes.digraph.DiGraph.add_edge": 566
        },
        {
            "networkx.classes.digraph.DiGraph.add_edges_from": 631
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/classes/function.py": [
        {
            "networkx.classes.function.frozen": 140
        },
        {
            "networkx.classes.function.add_star": 211
        },
        {
            "networkx.classes.function.add_path": 240
        },
        {
            "networkx.classes.function.add_cycle": 264
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/classes/graph.py": [
        {
            "networkx.classes.graph.Graph.__init__": 268
        },
        {
            "networkx.classes.graph.Graph.add_node": 440
        },
        {
            "networkx.classes.graph.Graph.add_nodes_from": 485
        },
        {
            "networkx.classes.graph.Graph.add_path": 727
        },
        {
            "networkx.classes.graph.Graph.add_cycle": 732
        },
        {
            "networkx.classes.graph.Graph.add_star": 737
        },
        {
            "networkx.classes.graph.Graph.add_edge": 821
        },
        {
            "networkx.classes.graph.Graph.add_edges_from": 884
        },
        {
            "networkx.classes.graph.Graph.add_weighted_edges_from": 945
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/classes/filters.py": [
        {
            "networkx.classes.filters.no_filter": 24
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/classes/tests/test_reportviews.py": [
        {
            "networkx.classes.tests.test_reportviews.TestEdgeDataView.modify_edge": 248
        },
        {
            "networkx.classes.tests.test_reportviews.TestMultiEdgeDataView.modify_edge": 374
        },
        {
            "networkx.classes.tests.test_reportviews.TestOutMultiEdgeDataView.modify_edge": 391
        },
        {
            "networkx.classes.tests.test_reportviews.TestEdgeView.modify_edge": 430
        },
        {
            "networkx.classes.tests.test_reportviews.TestMultiEdgeView.modify_edge": 565
        },
        {
            "networkx.classes.tests.test_reportviews.TestOutMultiEdgeView.modify_edge": 723
        },
        {
            "networkx.classes.tests.test_reportviews.TestInMultiEdgeView.modify_edge": 741
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/linalg/tests/test_algebraic_connectivity.py": [
        {
            "networkx.linalg.tests.test_algebraic_connectivity.wrapper": 21
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/algorithms/tests/test_link_prediction.py": [
        {
            "networkx.algorithms.tests.test_link_prediction._test_func": 9
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/algorithms/community/quality.py": [
        {
            "networkx.algorithms.community.quality.new_func": 69
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/algorithms/community/tests/test_centrality.py": [
        {
            "networkx.algorithms.community.tests.test_centrality.validate_possible_communities": 31
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/algorithms/traversal/edgedfs.py": [
        {
            "networkx.algorithms.traversal.edgedfs.out_edges": 27
        },
        {
            "networkx.algorithms.traversal.edgedfs.out_edges": 33
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/algorithms/isomorphism/matchhelpers.py": [
        {
            "networkx.algorithms.isomorphism.matchhelpers.categorical_edge_match": 115
        },
        {
            "networkx.algorithms.isomorphism.matchhelpers.numerical_edge_match": 205
        },
        {
            "networkx.algorithms.isomorphism.matchhelpers.generic_edge_match": 303
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/algorithms/tree/branchings.py": [
        {
            "networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.__init__": 168
        },
        {
            "networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.add_edge": 195
        },
        {
            "networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.add_edges_from": 208
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/algorithms/flow/maxflow.py": [
        {
            "networkx.algorithms.flow.maxflow.maximum_flow": 30
        },
        {
            "networkx.algorithms.flow.maxflow.maximum_flow_value": 174
        },
        {
            "networkx.algorithms.flow.maxflow.minimum_cut": 311
        },
        {
            "networkx.algorithms.flow.maxflow.minimum_cut_value": 475
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/readwrite/nx_yaml.py": [
        {
            "networkx.readwrite.nx_yaml.write_yaml": 30
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/readwrite/tests/test_gml.py": [
        {
            "networkx.readwrite.tests.test_gml.TestGraph.assert_generate_error": 425
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.0/readwrite/tests/test_shp.py": [
        {
            "networkx.readwrite.tests.test_shp.TestShp.deletetmp": 20
        }
    ]
}