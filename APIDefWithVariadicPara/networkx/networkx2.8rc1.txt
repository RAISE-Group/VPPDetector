{
    "/home/zhang/Packages/networkx/networkx2.8rc1/exception.py": [
        {
            "networkx.exception.PowerIterationFailedConvergence.__init__": 121
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/lazy_imports.py": [
        {
            "networkx.lazy_imports.DelayedImportErrorModule.__init__": 86
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/generators/small.py": [
        {
            "networkx.generators.small.wrapper": 52
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/generators/classic.py": [
        {
            "networkx.generators.classic.complete_multipartite_graph": 692
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/utils/union_find.py": [
        {
            "networkx.utils.union_find.UnionFind.union": 90
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/utils/decorators.py": [
        {
            "networkx.utils.decorators.not_implemented_for": 25
        },
        {
            "networkx.utils.decorators.wrapper": 305
        },
        {
            "networkx.utils.decorators.argmap.__init__": 735
        },
        {
            "networkx.utils.decorators.argmap.func": 810
        },
        {
            "networkx.utils.decorators.argmap.func": 815
        },
        {
            "networkx.utils.decorators.argmap._indent": 1219
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/utils/tests/test_decorators.py": [
        {
            "networkx.utils.tests.test_decorators.TestOpenFileDecorator.writer_arg4default": 141
        },
        {
            "networkx.utils.tests.test_decorators.TestOpenFileDecorator.writer_kwarg": 149
        },
        {
            "networkx.utils.tests.test_decorators.TestArgmap.foo": 409
        },
        {
            "networkx.utils.tests.test_decorators.TestArgmap.decorated": 418
        },
        {
            "networkx.utils.tests.test_decorators.TestArgmap.foo": 446
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/utils/tests/test_heaps.py": [
        {
            "networkx.utils.tests.test_heaps._test_heap_class": 90
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/tests/test_all_random_functions.py": [
        {
            "networkx.tests.test_all_random_functions.t": 19
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/drawing/nx_pylab.py": [
        {
            "networkx.drawing.nx_pylab.draw": 48
        },
        {
            "networkx.drawing.nx_pylab.draw_networkx": 126
        },
        {
            "networkx.drawing.nx_pylab._connectionstyle": 766
        },
        {
            "networkx.drawing.nx_pylab.draw_circular": 1208
        },
        {
            "networkx.drawing.nx_pylab.draw_kamada_kawai": 1242
        },
        {
            "networkx.drawing.nx_pylab.draw_random": 1277
        },
        {
            "networkx.drawing.nx_pylab.draw_spectral": 1311
        },
        {
            "networkx.drawing.nx_pylab.draw_spring": 1348
        },
        {
            "networkx.drawing.nx_pylab.draw_shell": 1386
        },
        {
            "networkx.drawing.nx_pylab.draw_planar": 1425
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/classes/multidigraph.py": [
        {
            "networkx.classes.multidigraph.MultiDiGraph.__init__": 284
        },
        {
            "networkx.classes.multidigraph.MultiDiGraph.add_edge": 400
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/classes/ordered.py": [
        {
            "networkx.classes.ordered.OrderedGraph.__init__": 66
        },
        {
            "networkx.classes.ordered.OrderedDiGraph.__init__": 94
        },
        {
            "networkx.classes.ordered.OrderedMultiGraph.__init__": 123
        },
        {
            "networkx.classes.ordered.OrderedMultiDiGraph.__init__": 152
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/classes/multigraph.py": [
        {
            "networkx.classes.multigraph.MultiGraph.__init__": 293
        },
        {
            "networkx.classes.multigraph.MultiGraph.add_edge": 415
        },
        {
            "networkx.classes.multigraph.MultiGraph.add_edges_from": 510
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/classes/digraph.py": [
        {
            "networkx.classes.digraph.DiGraph.__init__": 268
        },
        {
            "networkx.classes.digraph.DiGraph.add_node": 379
        },
        {
            "networkx.classes.digraph.DiGraph.add_nodes_from": 428
        },
        {
            "networkx.classes.digraph.DiGraph.add_edge": 568
        },
        {
            "networkx.classes.digraph.DiGraph.add_edges_from": 638
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/classes/function.py": [
        {
            "networkx.classes.function.frozen": 156
        },
        {
            "networkx.classes.function.add_star": 228
        },
        {
            "networkx.classes.function.add_path": 263
        },
        {
            "networkx.classes.function.add_cycle": 295
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/classes/graph.py": [
        {
            "networkx.classes.graph.Graph.__init__": 289
        },
        {
            "networkx.classes.graph.Graph.add_node": 478
        },
        {
            "networkx.classes.graph.Graph.add_nodes_from": 526
        },
        {
            "networkx.classes.graph.Graph.add_edge": 827
        },
        {
            "networkx.classes.graph.Graph.add_edges_from": 895
        },
        {
            "networkx.classes.graph.Graph.add_weighted_edges_from": 958
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/classes/filters.py": [
        {
            "networkx.classes.filters.no_filter": 20
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/classes/tests/test_reportviews.py": [
        {
            "networkx.classes.tests.test_reportviews.TestEdgeDataView.modify_edge": 283
        },
        {
            "networkx.classes.tests.test_reportviews.TestMultiEdgeDataView.modify_edge": 471
        },
        {
            "networkx.classes.tests.test_reportviews.TestOutMultiEdgeDataView.modify_edge": 503
        },
        {
            "networkx.classes.tests.test_reportviews.TestEdgeView.modify_edge": 573
        },
        {
            "networkx.classes.tests.test_reportviews.TestMultiEdgeView.modify_edge": 769
        },
        {
            "networkx.classes.tests.test_reportviews.TestOutMultiEdgeView.modify_edge": 952
        },
        {
            "networkx.classes.tests.test_reportviews.TestInMultiEdgeView.modify_edge": 985
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/algorithms/similarity.py": [
        {
            "networkx.algorithms.similarity.debug_print": 36
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/algorithms/tests/test_link_prediction.py": [
        {
            "networkx.algorithms.tests.test_link_prediction._test_func": 9
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/algorithms/tests/test_distance_measures.py": [
        {
            "networkx.algorithms.tests.test_distance_measures.TestBarycenter.barycenter_as_subgraph": 181
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/algorithms/community/tests/test_centrality.py": [
        {
            "networkx.algorithms.community.tests.test_centrality.validate_possible_communities": 20
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/algorithms/tree/branchings.py": [
        {
            "networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.__init__": 180
        },
        {
            "networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.add_edge": 203
        },
        {
            "networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.add_edges_from": 217
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/algorithms/flow/maxflow.py": [
        {
            "networkx.algorithms.flow.maxflow.maximum_flow": 27
        },
        {
            "networkx.algorithms.flow.maxflow.maximum_flow_value": 173
        },
        {
            "networkx.algorithms.flow.maxflow.minimum_cut": 312
        },
        {
            "networkx.algorithms.flow.maxflow.minimum_cut_value": 475
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/algorithms/shortest_paths/tests/test_weighted.py": [
        {
            "networkx.algorithms.shortest_paths.tests.test_weighted.TestWeightedPath.heuristic": 200
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/readwrite/tests/test_gml.py": [
        {
            "networkx.readwrite.tests.test_gml.TestGraph.assert_generate_error": 558
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.8rc1/readwrite/tests/test_shp.py": [
        {
            "networkx.readwrite.tests.test_shp.TestShp.deletetmp": 82
        }
    ]
}