{
    "/home/zhang/Packages/networkx/networkx2.4rc1/exception.py": [
        {
            "networkx.exception.PowerIterationFailedConvergence.__init__": 134
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/generators/classic.py": [
        {
            "networkx.generators.classic.complete_multipartite_graph": 675
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/utils/union_find.py": [
        {
            "networkx.utils.union_find.UnionFind.union": 101
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/utils/decorators.py": [
        {
            "networkx.utils.decorators.not_implemented_for": 29
        },
        {
            "networkx.utils.decorators._not_implemented_for": 65
        },
        {
            "networkx.utils.decorators._open_file": 172
        },
        {
            "networkx.utils.decorators._nodes_or_number": 284
        },
        {
            "networkx.utils.decorators.wrapper": 344
        },
        {
            "networkx.utils.decorators._random_state": 390
        },
        {
            "networkx.utils.decorators._random_state": 449
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/utils/tests/test_decorators.py": [
        {
            "networkx.utils.tests.test_decorators.TestOpenFileDecorator.writer_arg4default": 68
        },
        {
            "networkx.utils.tests.test_decorators.TestOpenFileDecorator.writer_kwarg": 76
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/utils/tests/test_heaps.py": [
        {
            "networkx.utils.tests.test_heaps._test_heap_class": 90
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/tests/test_all_random_functions.py": [
        {
            "networkx.tests.test_all_random_functions.t": 21
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/drawing/nx_pylab.py": [
        {
            "networkx.drawing.nx_pylab.draw": 46
        },
        {
            "networkx.drawing.nx_pylab.draw_networkx": 131
        },
        {
            "networkx.drawing.nx_pylab.draw_networkx_nodes": 281
        },
        {
            "networkx.drawing.nx_pylab.draw_networkx_edges": 430
        },
        {
            "networkx.drawing.nx_pylab.draw_networkx_labels": 715
        },
        {
            "networkx.drawing.nx_pylab.draw_networkx_edge_labels": 829
        },
        {
            "networkx.drawing.nx_pylab.draw_circular": 982
        },
        {
            "networkx.drawing.nx_pylab.draw_kamada_kawai": 998
        },
        {
            "networkx.drawing.nx_pylab.draw_random": 1014
        },
        {
            "networkx.drawing.nx_pylab.draw_spectral": 1030
        },
        {
            "networkx.drawing.nx_pylab.draw_spring": 1051
        },
        {
            "networkx.drawing.nx_pylab.draw_shell": 1067
        },
        {
            "networkx.drawing.nx_pylab.draw_planar": 1086
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/classes/multidigraph.py": [
        {
            "networkx.classes.multidigraph.MultiDiGraph.__init__": 274
        },
        {
            "networkx.classes.multidigraph.MultiDiGraph.add_edge": 362
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/classes/multigraph.py": [
        {
            "networkx.classes.multigraph.MultiGraph.__init__": 288
        },
        {
            "networkx.classes.multigraph.MultiGraph.add_edge": 372
        },
        {
            "networkx.classes.multigraph.MultiGraph.add_edges_from": 463
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/classes/digraph.py": [
        {
            "networkx.classes.digraph.DiGraph.__init__": 270
        },
        {
            "networkx.classes.digraph.DiGraph.add_node": 381
        },
        {
            "networkx.classes.digraph.DiGraph.add_nodes_from": 428
        },
        {
            "networkx.classes.digraph.DiGraph.add_edge": 577
        },
        {
            "networkx.classes.digraph.DiGraph.add_edges_from": 643
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/classes/function.py": [
        {
            "networkx.classes.function.frozen": 142
        },
        {
            "networkx.classes.function.add_star": 214
        },
        {
            "networkx.classes.function.add_path": 249
        },
        {
            "networkx.classes.function.add_cycle": 281
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/classes/graph.py": [
        {
            "networkx.classes.graph.Graph.__init__": 300
        },
        {
            "networkx.classes.graph.Graph.add_node": 477
        },
        {
            "networkx.classes.graph.Graph.add_nodes_from": 523
        },
        {
            "networkx.classes.graph.Graph.add_edge": 830
        },
        {
            "networkx.classes.graph.Graph.add_edges_from": 894
        },
        {
            "networkx.classes.graph.Graph.add_weighted_edges_from": 954
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/classes/filters.py": [
        {
            "networkx.classes.filters.no_filter": 24
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/classes/tests/test_reportviews.py": [
        {
            "networkx.classes.tests.test_reportviews.TestEdgeDataView.modify_edge": 263
        },
        {
            "networkx.classes.tests.test_reportviews.TestMultiEdgeDataView.modify_edge": 404
        },
        {
            "networkx.classes.tests.test_reportviews.TestOutMultiEdgeDataView.modify_edge": 422
        },
        {
            "networkx.classes.tests.test_reportviews.TestEdgeView.modify_edge": 463
        },
        {
            "networkx.classes.tests.test_reportviews.TestMultiEdgeView.modify_edge": 607
        },
        {
            "networkx.classes.tests.test_reportviews.TestOutMultiEdgeView.modify_edge": 766
        },
        {
            "networkx.classes.tests.test_reportviews.TestInMultiEdgeView.modify_edge": 785
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/algorithms/similarity.py": [
        {
            "networkx.algorithms.similarity.debug_print": 42
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/algorithms/tests/test_link_prediction.py": [
        {
            "networkx.algorithms.tests.test_link_prediction._test_func": 9
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/algorithms/tests/test_distance_measures.py": [
        {
            "networkx.algorithms.tests.test_distance_measures.TestBarycenter.barycenter_as_subgraph": 193
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/algorithms/community/quality.py": [
        {
            "networkx.algorithms.community.quality.new_func": 65
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/algorithms/community/tests/test_centrality.py": [
        {
            "networkx.algorithms.community.tests.test_centrality.validate_possible_communities": 29
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/algorithms/isomorphism/matchhelpers.py": [
        {
            "networkx.algorithms.isomorphism.matchhelpers.categorical_edge_match": 115
        },
        {
            "networkx.algorithms.isomorphism.matchhelpers.numerical_edge_match": 205
        },
        {
            "networkx.algorithms.isomorphism.matchhelpers.generic_edge_match": 303
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/algorithms/tree/branchings.py": [
        {
            "networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.__init__": 178
        },
        {
            "networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.add_edge": 201
        },
        {
            "networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.add_edges_from": 215
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/algorithms/flow/maxflow.py": [
        {
            "networkx.algorithms.flow.maxflow.maximum_flow": 30
        },
        {
            "networkx.algorithms.flow.maxflow.maximum_flow_value": 175
        },
        {
            "networkx.algorithms.flow.maxflow.minimum_cut": 313
        },
        {
            "networkx.algorithms.flow.maxflow.minimum_cut_value": 478
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/readwrite/nx_yaml.py": [
        {
            "networkx.readwrite.nx_yaml.write_yaml": 31
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/readwrite/tests/test_gml.py": [
        {
            "networkx.readwrite.tests.test_gml.TestGraph.assert_generate_error": 458
        }
    ],
    "/home/zhang/Packages/networkx/networkx2.4rc1/readwrite/tests/test_shp.py": [
        {
            "networkx.readwrite.tests.test_shp.TestShp.deletetmp": 78
        }
    ]
}